/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0
THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.
See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/// <引用 不使用默认支持库= "真"/>
//@@{ 反射类:Reflect }
声明 名域 反射类 {
    //@@{ 应用:apply, 目标:target, 函数类:Function, 本体增强参数集:thisArgument, 参数集列表:argumentsList, 数组连接类:ArrayLike }
    函数 应用(目标: 函数类, 本体增强参数集: 任意, 参数集列表: 数组连接类<任意>): 任意;
    //@@{ 构造器:construct, 目标:target, 函数类:Function, 参数集列表:argumentsList, 数组连接类:ArrayLike, 新目标:newTarget }
    函数 构造器(目标: 函数类, 参数集列表: 数组连接类<任意>, 新目标?: 任意): 任意;
    //@@{ 定义属性:defineProperty, 目标:target, 属性键:propertyKey, 属性键类:PropertyKey, 特性集:attributes, 属性描述符类:PropertyDescriptor }
    函数 定义属性(目标: 实例, 属性键: 属性键类, 特性集: 属性描述符类): 真假;
    //@@{ 删除属性:deleteProperty, 目标:target, 属性键:propertyKey, 属性键类:PropertyKey }
    函数 删除属性(目标: 实例, 属性键: 属性键类): 真假;
    //@@{ 获取:get, 目标:target, 属性键:propertyKey, 属性键类:PropertyKey, 接收器:receiver }
    函数 获取(目标: 实例, 属性键: 属性键类, 接收器?: 任意): 任意;
    //@@{ 取本身属性描述符:getOwnPropertyDescriptor, 目标:target, 属性键:propertyKey, 属性键类:PropertyKey, 属性描述符类:PropertyDescriptor }
    函数 取本身属性描述符(目标: 实例, 属性键: 属性键类): 属性描述符类 | 未定;
    //@@{ 取原型在:getPrototypeOf, 目标:target }
    函数 取原型在(目标: 实例): 实例;
    //@@{ 存在:has, 目标:target, 属性键:propertyKey, 属性键类:PropertyKey }
    函数 存在(目标: 实例, 属性键: 属性键类): 真假;
    //@@{ 是可扩展的:isExtensible, 目标:target }
    函数 是可扩展的(目标: 实例): 真假;
    //@@{ 自身键集:ownKeys, 目标:target, 属性键类:PropertyKey }
    函数 自身键集(目标: 实例): 属性键类[];
    //@@{ 防止扩展:preventExtensions, 目标:target }
    函数 防止扩展(目标: 实例): 真假;
    //@@{ 设置:set, 目标:target, 属性键:propertyKey, 属性键类:PropertyKey, 值:value, 接收器:receiver }
    函数 设置(目标: 实例, 属性键: 属性键类, 值: 任意, 接收器?: 任意): 真假;
    //@@{ 置原型在:setPrototypeOf, 目标:target, 属性:proto }
    函数 置原型在(目标: 实例, 属性: 任意): 真假;
}
